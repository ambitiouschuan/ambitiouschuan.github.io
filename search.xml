<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo-添加网站运行时间</title>
    <url>/2020/03/28/hexo-%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</url>
    <content><![CDATA[<hr>
<p>title: hexo-添加网站运行时间<br>date: 2020-03-28 13:24:22<br>tags:hexo next</p>
<hr>
<p>这个小功能可以很好的记录自己博客运行的时间，并且可以根据自己需要更改文字。<br>这个小功能的实现非常的简单，按照如下步骤，就能轻松获取！<br>在 \themes\next\layout_partial\footer.ejs 文件下添加以下代码<br>（记得修改自己的建站时间！）</p>
<pre><code class="bash">&lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;/span&gt;&lt;span id=<span class="string">"times"</span>&gt;载入时分秒...&lt;/span&gt;
&lt;script&gt;
    var now = new Date(); 
    <span class="keyword">function</span> <span class="function"><span class="title">createtime</span></span>() { 
        var grt= new Date(<span class="string">"03/01/2020 17:38:00"</span>);//在此处修改你的建站时间，格式：月/日/年 时:分:秒
        now.setTime(now.getTime()+250); 
        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); 
        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); 
        <span class="keyword">if</span>(String(hnum).length ==1 ){hnum = <span class="string">"0"</span> + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); 
        mnum = Math.floor(minutes); <span class="keyword">if</span>(String(mnum).length ==1 ){mnum = <span class="string">"0"</span> + mnum;} 
        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); 
        snum = Math.round(seconds); <span class="keyword">if</span>(String(snum).length ==1 ){snum = <span class="string">"0"</span> + snum;} 
        document.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"本站已安全运行 "</span>+dnum+<span class="string">" 天 "</span>; 
        document.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>; 
    } 
setInterval(<span class="string">"createtime()"</span>,250);
&lt;/script&gt;</code></pre>
]]></content>
  </entry>
  <entry>
    <title>hexo-卡通图贴添加</title>
    <url>/2020/03/28/hexo-%E5%8D%A1%E9%80%9A%E5%9B%BE%E8%B4%B4%E6%B7%BB%E5%8A%A0/</url>
    <content><![CDATA[<hr>
<p>title: hexo 卡通图贴（看板娘）添加<br>date: 2020-03-28 10:54:06<br>tags:hexo next </p>
<hr>
<p>博客美化之卡通图贴，如我的网页右下角就有一只小猫咪（hijiki），撸猫专属，它可以随着你的鼠标光标移动目光，枯燥乏味时还能撸猫，岂不美哉？作为经典博客美化方案，还不赶快学起来？</p>
<h2 id="hexo美化之–添加卡通图贴"><a href="#hexo美化之–添加卡通图贴" class="headerlink" title="hexo美化之–添加卡通图贴"></a>hexo美化之–添加卡通图贴</h2><p>首先检查站点目录下面的 package.json里是否有<br>“hexo-helper-live2d”: “^3.0.3”，如果已经有的话可以先卸载<br>然后在博客文件（我的是blogs文件夹，取决于你最初搭建网站建立的文件夹名字）右键选择Git Bash Here 进入命令窗口使用命令：</p>
<pre><code class="bash">$  npm install --save hexo-helper-live2d</code></pre>
<p>等待完成</p>
<p>选择想要的卡通图贴：各个模型的预览请访问 <a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">原作者的博客</a></p>
<p>接下来添加模型文件有两种方案，我使用的是方案一：</p>
<h3 id="方案一-简单粗暴添加"><a href="#方案一-简单粗暴添加" class="headerlink" title="方案一   简单粗暴添加"></a>方案一   简单粗暴添加</h3><p>1、直接进入官网下载好所需模型：<br><a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">图贴模型github官网来源</a></p>
<p>2、然后打开下载好的live2d-widget-models-master文件夹中的packages文件夹，（live2d-widget-models-master\live2d-widget-models-master\packages）全部复制站点文件中的node_modules文件中</p>
<p>3、打开站点目录（我的是在blogs文件，不是主题next之类的文件夹）下的 _config.yml 文件，添加如下代码：</p>
<pre><code class="bash">卡通人物选择
live2d:
  <span class="built_in">enable</span>: <span class="literal">true</span>
  scriptFrom: <span class="built_in">local</span>
  model:
    use: live2d-widget-model-packages <span class="comment">#模型选择，更改自己喜欢的packages</span>
  display:
    position: right  <span class="comment">#模型位置</span>
    width: 150       <span class="comment">#模型宽度</span>
    height: 300      <span class="comment">#模型高度</span>
  mobile:
    show: <span class="literal">true</span>      <span class="comment">#是否在手机端显示</span></code></pre>
<p>4、然后照常的：<br>清除数据</p>
<pre><code class="bash">$  hexo clean</code></pre>
<p>生成</p>
<pre><code class="bash">$  hexo g</code></pre>
<p>部署</p>
<pre><code class="bash">$  hexo d</code></pre>
<h3 id="方案二-npm添加"><a href="#方案二-npm添加" class="headerlink" title="方案二    npm添加"></a>方案二    npm添加</h3><p>1、在博客文件（我的是blogs文件夹，取决于你最初搭建网站建立的文件夹名字）右键选择Git Bash Here 进入命令窗口使用命令输入以下命令来下载相应的模型，将 packagename 更换成模型名称即可</p>
<pre><code class="bash">$ npm install packagename</code></pre>
<p>2、打开站点目录（我的是在blogs文件，不是主题next之类的文件夹）下的 _config.yml 文件，添加如下代码：</p>
<pre><code class="bash">卡通人物选择
live2d:
  <span class="built_in">enable</span>: <span class="literal">true</span>
  scriptFrom: <span class="built_in">local</span>
  model:
  use: live2d-widget-model-packages <span class="comment">#模型选择，更改自己喜欢的packages</span>
  display:
    position: right  <span class="comment">#模型位置</span>
    width: 150       <span class="comment">#模型宽度</span>
    height: 300      <span class="comment">#模型高度</span>
  mobile:
    show: <span class="literal">true</span>      <span class="comment">#是否在手机端显示</span></code></pre>
<p>3、然后照常的：<br>清除数据</p>
<pre><code class="bash">$  hexo clean</code></pre>
<p>生成</p>
<pre><code class="bash">$  hexo g</code></pre>
<p>部署</p>
<pre><code class="bash">$  hexo d</code></pre>
<p>##到此，图贴添加完毕， 多刷新几次自己的博客网页，更新部署会有延迟，接着就能正常显示了。</p>
]]></content>
  </entry>
  <entry>
    <title>如何发布hexo文章</title>
    <url>/2020/03/27/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83hexo%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
